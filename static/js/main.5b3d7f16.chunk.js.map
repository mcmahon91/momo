{"version":3,"sources":["firebase.js","App.js","serviceWorker.js","index.js"],"names":["testdatabase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","app","firebase","initializeApp","speedValue","database","ref","child","phonesUpdated","usersUpdated","updatespeed","updateIphone6","updateIphone7","updateIphone8","updateIphoneX","updateIphoneXS","updateSamsung1","updateSamsung2","updateSamsung3","updateSamsung4","updateSamsung5","state","users","phonePicked","React","createRef","phonePickedClear","person","handleSubmit","e","preventDefault","today","Date","time","getHours","getMinutes","current","value","console","log","update","currentTarget","reset","checkIn","this","on","snap","setState","speed","val","phones","className","name","id","key","checkedOutBy","checkedOutTime","index","map","phone","checkOutTime","onSubmit","Row","Group","as","Col","controlId","Label","Control","user","type","onClick","bind","Component","OnePhone","props","phoneName","phoneid","PhoneName","PhoneID","CheckedOutBy","CheckOutTime","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b3d7f16.chunk.js","sourcesContent":["export const testdatabase = {\n    apiKey: \"AIzaSyCdi_l7oF-xAfkE7I0GbjBb8fgrR-O2ZZU\",\n    authDomain: \"reactmomoindie.firebaseapp.com\",\n    databaseURL: \"https://reactmomoindie.firebaseio.com\",\n    projectId: \"reactmomoindie\",\n    storageBucket: \"\",\n    messagingSenderId: \"712470195766\",\n    appId: \"1:712470195766:web:466492662ffea26dd43297\"\n};","import React, { Component } from 'react';\nimport './App.css';\nimport {testdatabase} from \"./firebase.js\"\nimport Form from 'react-bootstrap/Form'\nimport { Col } from 'react-bootstrap';\nimport firebase from 'firebase';\n\nclass App extends Component {\n\n  app = firebase.initializeApp(testdatabase);\n\n\n  speedValue = this.app.database().ref().child('speed')\n  phonesUpdated = this.app.database().ref().child('phones')\n  usersUpdated = this.app.database().ref().child('users')\n  updatespeed = this.app.database().ref()\n  updateIphone6 = this.app.database().ref().child('phones').child(\"0\")\n  updateIphone7 = this.app.database().ref().child('phones').child(\"1\")\n  updateIphone8 = this.app.database().ref().child('phones').child(\"2\")\n  updateIphoneX = this.app.database().ref().child('phones').child(\"3\")\n  updateIphoneXS = this.app.database().ref().child('phones').child(\"4\")\n  updateSamsung1 = this.app.database().ref().child('phones').child(\"5\")\n  updateSamsung2 = this.app.database().ref().child('phones').child(\"6\")\n  updateSamsung3 = this.app.database().ref().child('phones').child(\"7\")\n  updateSamsung4 = this.app.database().ref().child('phones').child(\"8\")\n  updateSamsung5 = this.app.database().ref().child('phones').child(\"9\")\n  \n\n  state = {\n\n    \"phones\" : [\n      ],\n\n    users: [\n    ],\n\n  }\n\n  componentDidMount() {\n    this.speedValue.on('value', snap => {\n      this.setState({\n        speed: snap.val(),\n      })\n    })\n\n    this.phonesUpdated.on('value', snap =>{\n      this.setState({\n        phones: snap.val()\n      })\n    })\n\n    this.usersUpdated.on('value', snap =>{\n      this.setState({\n        users: snap.val()\n      })\n    })\n  }\n\n  phonePicked = React.createRef()\n  phonePickedClear = React.createRef()\n  person = React.createRef()\n  \n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    var today = new Date();\n    var time = today.getHours() + \":\" + today.getMinutes();\n    \n    if(this.phonePicked.current.value === \"iPhone 6\"){\n      console.log(this.phonePicked.current.value)\n      this.updateIphone6.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"1\",\n        \"name\" : \"iPhone 6\"\n      })\n    } else if (this.phonePicked.current.value === \"iPhone 7\") {\n      this.updateIphone7.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"2\",\n        \"name\" : \"iPhone 7\"\n      })\n    }else if (this.phonePicked.current.value === \"iPhone 8\") {\n      this.updateIphone8.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"3\",\n        \"name\" : \"iPhone 8\"\n      })\n    } else if (this.phonePicked.current.value === \"iPhone X\") {\n      this.updateIphoneX.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"4\",\n        \"name\" : \"iPhone X\"\n      })\n    } else if (this.phonePicked.current.value === \"iPhone XS\") {\n      this.updateIphoneXS.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"5\",\n        \"name\" : \"iPhone XS\"\n      })\n    } else if (this.phonePicked.current.value === \"samsung 1\") {\n      this.updateSamsung1.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"6\",\n        \"name\" : \"samsung 1\"\n      })\n    } else if (this.phonePicked.current.value === \"samsung 2\") {\n      this.updateSamsung2.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"7\",\n        \"name\" : \"samsung 2\"\n      })\n    } else if (this.phonePicked.current.value === \"samsung 3\") {\n      this.updateSamsung3.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"8\",\n        \"name\" : \"samsung 3\"\n      })\n    } else if (this.phonePicked.current.value === \"samsung 4\") {\n      this.updateSamsung4.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"9\",\n        \"name\" : \"samsung 4\"\n      })\n    } else if (this.phonePicked.current.value === \"samsung 5\") {\n      this.updateSamsung5.update({\n        \"checkOutTime\" : time,\n        \"checkedOutBy\" : this.person.current.value,\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"10\",\n        \"name\" : \"samsung 5\"\n      })\n    }\n    e.currentTarget.reset()\n  }\n\n\n  checkIn = (e) => {\n    e.preventDefault();\n    if(this.phonePickedClear.current.value === \"iPhone 6\"){\n      console.log(this.phonePicked.current.value)\n      this.updateIphone6.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"1\",\n        \"name\" : \"iPhone 6\"\n      })\n    } else if (this.phonePickedClear.current.value === \"iPhone 7\") {\n      this.updateIphone7.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"2\",\n        \"name\" : \"iPhone 7\"\n      })\n    }else if (this.phonePickedClear.current.value === \"iPhone 8\") {\n      this.updateIphone8.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"3\",\n        \"name\" : \"iPhone 8\"\n      })\n    } else if (this.phonePickedClear.current.value === \"iPhone X\") {\n      this.updateIphoneX.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"4\",\n        \"name\" : \"iPhone X\"\n      })\n    } else if (this.phonePickedClear.current.value === \"iPhone XS\") {\n      this.updateIphoneXS.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"5\",\n        \"name\" : \"iPhone XS\"\n      })\n    } else if (this.phonePickedClear.current.value === \"samsung 1\") {\n      this.updateSamsung1.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"6\",\n        \"name\" : \"samsung 1\"\n      })\n    } else if (this.phonePickedClear.current.value === \"samsung 2\") {\n      this.updateSamsung2.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"7\",\n        \"name\" : \"samsung 2\"\n      })\n    } else if (this.phonePickedClear.current.value === \"samsung 3\") {\n      this.updateSamsung3.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"8\",\n        \"name\" : \"samsung 3\"\n      })\n    } else if (this.phonePickedClear.current.value === \"samsung 4\") {\n      this.updateSamsung4.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"9\",\n        \"name\" : \"samsung 4\"\n      })\n    } else if (this.phonePickedClear.current.value === \"samsung 5\") {\n      this.updateSamsung5.update({\n        \"checkOutTime\" : \"\",\n        \"checkedOutBy\" : \"\",\n        \"id\" : \"sdgbf-savwsefv-wevvewv-wevwvwe\",\n        \"key\" : \"10\",\n        \"name\" : \"samsung 5\"\n      })\n    }\n    // e.currentTarget.reset()\n  }\n\n  render() {\n    return (\n      \n      <div className=\"App\">\n        <div className=\"phoneList\">\n          <OnePhone \n            name={\"Model\"}\n            id={\"Phone ID\"}\n            key={\"Phone Key\"}\n            checkedOutBy={\"Checked Out\"}\n            checkedOutTime={\"Time\"} \n            index={\"Index\"}\n            />\n          {this.state.phones.map((phone, index) =>\n            <OnePhone\n              name={phone.name}\n              id={phone.id}\n              key={phone.key}\n              checkedOutBy={phone.checkedOutBy}\n              checkedOutTime={phone.checkOutTime}\n              index={index}\n            />\n          )}\n        </div>\n\n        <div className=\"checkOutBar\">\n          <p>Check Out:</p>\n          <form onSubmit={this.handleSubmit}>\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridCity\">\n                <Form.Label>Phone</Form.Label>\n                <Form.Control as=\"select\" ref={this.phonePicked}>\n                  <option>Choose...</option>\n                  {this.state.phones.map((phone, index) =>\n                    <option>{phone.name}</option>\n                  )}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formGridState\">\n                <Form.Label>User:</Form.Label>\n                <Form.Control as=\"select\" ref={this.person}>\n                  <option>Choose...</option>\n                  {this.state.users.map((user, index) =>\n                    <option>{user.name}</option>\n                  )}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <button type=\"submit\" name=\"checkOut\" className=\"btn btn-primary\" value=\"checkOut\">Check Out</button>\n            <br/>\n            <p>Check In:</p>\n            \n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formGridCity\">\n\n                <Form.Control as=\"select\" ref={this.phonePickedClear}>\n                  <option>Choose...</option>\n                  {this.state.phones.map((phone, index) =>\n                    <option>{phone.name}</option>\n                  )}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n            <button type=\"submit\" name=\"checkIn\" className=\"btn btn-primary\" onClick={this.checkIn.bind(this)}>Check In</button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst OnePhone = (props) => {\n  return (\n    <div className=\"line\">\n      <PhoneName phoneName={props.name}/>\n      <PhoneID phoneid={props.id}/>\n      <CheckedOutBy checkedOutBy={props.checkedOutBy}/>\n      <CheckOutTime checkedOutTime={props.checkedOutTime}/>\n    </div>\n  )\n}\n\nconst PhoneName = (props) => {\n  return (\n      <p className=\"phoneName\">{props.phoneName}</p>\n  )\n}\n\nconst PhoneID = (props) => {\n  return (\n\n      <p className=\"phoneID\">{props.phoneid}</p>\n\n  )\n}\n\nconst CheckedOutBy = (props) => {\n  return (\n      <p className=\"checkedOutBy\">{props.checkedOutBy} </p>\n  )\n}\n\nconst CheckOutTime = (props) => {\n  return (\n      <p className=\"checkOutTime\">{props.checkedOutTime}</p>\n  )\n}\n\n\n\n// const CheckOutBar= (props) => {\n\n//   handleSubmit(event){\n//     event.preventDefault();\n//   }; \n\n//   return (\n\n//     <div className=\"checkOutBar\">\n//     <p>Check Out:</p>\n//     <form onSubmit={this.handleSubmit()}>\n//     {/* <form> */}\n//       <Form.Row>\n//         <Form.Group as={Col} controlId=\"formGridCity\">\n//         <Form.Label>Phone</Form.Label>\n//         <Form.Control as=\"select\">\n//             <option>Choose...</option>\n//             {props.phones.map((phone, index) =>\n//               <option>{phone.name}</option>\n//         )}\n//         </Form.Control>\n//         </Form.Group>\n\n//         <Form.Group as={Col} controlId=\"formGridState\">\n//           <Form.Label>User:</Form.Label>\n//           <Form.Control as=\"select\">\n//             <option>Choose...</option>\n//             {props.users.map((user, index) =>\n//               <option>{user.name}</option>\n//         )}\n//           </Form.Control>\n//         </Form.Group>\n//       </Form.Row>\n//       <button type=\"submit\" class=\"btn btn-primary\">Check Out</button>\n//     </form>\n//   </div>\n//   )\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}